# core/services/settings_service.py
# -*- coding: utf-8 -*-

import logging
from typing import Dict, Any, TYPE_CHECKING
import discord

if TYPE_CHECKING:
    from apps.discord_bot.main import SecurityBot

logger = logging.getLogger(__name__)

QUARANTINE_ROLE_NAME = "üö´ –ö–∞—Ä–∞–Ω—Ç–∏–Ω"

async def configure_quarantine(bot: "SecurityBot", guild: discord.Guild) -> Dict[str, Any]:
    """
    –°–µ—Ä–≤–∏—Å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–∏ –∫–∞—Ä–∞–Ω—Ç–∏–Ω–∞.
    –ò—â–µ—Ç —Ä–æ–ª—å, —Å–æ–∑–¥–∞–µ—Ç –µ—Å–ª–∏ –Ω—É–∂–Ω–æ, –∏ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –µ–µ ID –≤ –ë–î.
    """
    quarantine_role = discord.utils.get(guild.roles, name=QUARANTINE_ROLE_NAME)
    try:
        if not quarantine_role:
            logger.info(f"–†–æ–ª—å '{QUARANTINE_ROLE_NAME}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {guild.name}, —Å–æ–∑–¥–∞—é...")
            permissions = discord.Permissions.none()
            quarantine_role = await guild.create_role(
                name=QUARANTINE_ROLE_NAME,
                permissions=permissions,
                reason="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
            )
            try:
                await quarantine_role.edit(position=guild.me.top_role.position - 1)
            except (discord.Forbidden, discord.HTTPException):
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å —Ä–æ–ª—å –∫–∞—Ä–∞–Ω—Ç–∏–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {guild.name}. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–µ—Ä–∞—Ä—Ö–∏—é —Ä–æ–ª–µ–π.")
        
        async with bot.db_pool.acquire() as conn:
            async with conn.cursor() as cursor:
                await cursor.execute(
                    """INSERT INTO guild_configs (guild_id, config_key, config_value) 
                       VALUES (%s, 'quarantine_role_id', %s) 
                       ON DUPLICATE KEY UPDATE config_value = VALUES(config_value)""",
                    (guild.id, str(quarantine_role.id))
                )
        
        await bot.redis.delete(f"antinuke_settings:{guild.id}")
        return {'status': 'success', 'role': quarantine_role}
    except discord.Forbidden:
        return {'status': 'error', 'code': 'missing_permissions'}
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Å–µ—Ä–≤–∏—Å–µ configure_quarantine –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {guild.id}: {e}", exc_info=True)
        return {'status': 'error', 'code': 'db_error'}


async def set_guild_setting(bot: "SecurityBot", guild_id: int, key: str, value: Any) -> Dict[str, Any]:
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ–¥–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞.
    """
    try:
        async with bot.db_pool.acquire() as conn:
            async with conn.cursor() as cursor:
                await cursor.execute(
                    """INSERT INTO guild_configs (guild_id, config_key, config_value)
                       VALUES (%s, %s, %s) ON DUPLICATE KEY UPDATE config_value = VALUES(config_value)""",
                    (guild_id, key, str(value))
                )
        
        if key == 'language':
            await bot.redis.delete(f"lang:{guild_id}")
        elif key.startswith('antinuke_'):
            await bot.redis.delete(f"antinuke_settings:{guild_id}")
            
        return {'status': 'success'}
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ '{key}' –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {guild_id}: {e}")
        return {'status': 'error', 'code': 'db_error'}

async def delete_guild_setting(bot: "SecurityBot", guild_id: int, key: str) -> Dict[str, Any]:
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (—Å–±—Ä–æ—Å–∞) –æ–¥–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞.
    """
    try:
        async with bot.db_pool.acquire() as conn:
            async with conn.cursor() as cursor:
                await cursor.execute(
                    "DELETE FROM guild_configs WHERE guild_id = %s AND config_key = %s",
                    (guild_id, key)
                )
        
        if key.startswith('antinuke_'):
            await bot.redis.delete(f"antinuke_settings:{guild_id}")

        return {'status': 'success'}
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ '{key}' –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {guild_id}: {e}")
        return {'status': 'error', 'code': 'db_error'}